# Name of the GitHub Actions Workflow
name: Build and Deploy to Firebase Functions

# Controls when the action will run. 
# Triggers the workflow on push events but only for the "main" branch.
on:
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_and_deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1. Checkout your repository code
      # This action checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Set up Node.js
      # Sets up a Node.js environment for use in your workflow.
      # We specify Node.js version 20, which is compatible with recent Firebase Functions.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3. Install Firebase CLI and Dependencies
      # Installs the project dependencies and the Firebase Command Line Interface.
      # The 'npm ci' command is used for faster, more reliable installs in CI/CD environments.
      # The '--prefix functions' flag ensures we install dependencies inside your 'functions' directory.
      - name: Install Dependencies
        run: |
          npm install -g firebase-tools
          npm ci --prefix functions

      # 4. Build the TypeScript project
      # Compiles your TypeScript code in the 'functions' directory into JavaScript.
      # This command runs the 'build' script defined in your functions/package.json.
      - name: Build TypeScript
        run: npm run build --prefix functions

      # 5. Deploy to Firebase Functions
      # This is the official action for deploying to Firebase.
      # It uses a service account key stored in your GitHub Secrets to authenticate.
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          # This uses the service account key you will add to your repository secrets.
          # The name 'FIREBASE_SERVICE_ACCOUNT_TSPROTX' is a unique name using your Docker name.
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
